name: Server Setup

on:
  workflow_dispatch:
  push:
    paths:
      - "ansible/**"
      - "nginx.conf.j2"

env:
  SSH_KEY_FILE_NAME: "id_rsa"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Store SSH key
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ${{ env.SSH_KEY_FILE_NAME }}

      - name: Change SSH key permission
        run: chmod 444 ${{ env.SSH_KEY_FILE_NAME }}

      - name: Store SSL certificate
        run: echo "${{ secrets.SSL_CERT }}" > ${{ vars.APP_NAME }}.pem

      - name: Store SSL key
        run: echo "${{ secrets.SSL_KEY }}" > ${{ vars.APP_NAME }}.key

      - name: Upload SSL certificate to temp directory
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: ${{ env.SSH_KEY_FILE_NAME }}
          source: ${{ vars.APP_NAME }}.pem
          target: "/home/${{ secrets.SERVER_USER }}/ssl/${{ vars.APP_NAME }}.pem"

      - name: Upload SSL key to temp directory
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: ${{ env.SSH_KEY_FILE_NAME }}
          source: ${{ vars.APP_NAME }}.key
          target: "/home/${{ secrets.SERVER_USER }}/ssl/${{ vars.APP_NAME }}.key"

      - name: Move SSL certificate and SSL key to correct directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: ${{ env.SSH_KEY_FILE_NAME }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo mv /home/${{ secrets.SERVER_USER }}/ssl/${{ vars.APP_NAME }}.pem /etc/ssl/certs/
            sudo mv /home/${{ secrets.SERVER_USER }}/ssl/${{ vars.APP_NAME }}.key /etc/ssl/private/

      - name: Change SSL certificate and SSL key permission
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: ${{ env.SSH_KEY_FILE_NAME }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo chmod 644 /etc/ssl/certs/${{ vars.APP_NAME }}.pem
            sudo chmod 600 /etc/ssl/private/${{ vars.APP_NAME }}.key

      - name: Upload Ansible playbook to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: ${{ env.SSH_KEY_FILE_NAME }}
          port: ${{ secrets.SSH_PORT }}
          source: "./ansible"
          target: "/home/${{ secrets.SERVER_USER }}/"

      - name: Setup Ansible on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: ${{ env.SSH_KEY_FILE_NAME }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo apt update -y
            sudo apt install -y ansible

      - name: Trigger Ansible Playbook
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: ${{ env.SSH_KEY_FILE_NAME }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/ansible
            ansible-playbook -i "${{ secrets.SERVER_HOST }}," -u "${{ secrets.SERVER_USER }}" playbook.yml --extra-vars "app_name=${{ vars.APP_NAME }} server_name=${{ secrets.SERVER_NAME }}"
